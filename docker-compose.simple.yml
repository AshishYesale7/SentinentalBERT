version: '3.8'

services:
  # Core Database
  postgres:
    image: postgres:15-alpine
    container_name: sentinelbert-postgres
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - sentinelbert-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: sentinelbert-redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - sentinelbert-net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  # NLP Service
  nlp-service:
    build:
      context: ./services/nlp
      dockerfile: Dockerfile
    container_name: sentinelbert-nlp
    environment:
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379
      - DATABASE_URL=postgresql://${POSTGRES_USER:-sentinel}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-sentinelbert}
      - PORT=8001
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8001:8001"
      - "12000:8001"
    networks:
      - sentinelbert-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Streamlit Dashboard
  streamlit-dashboard:
    build:
      context: .
      dockerfile: Dockerfile.streamlit
    container_name: sentinelbert-streamlit
    environment:
      - NLP_SERVICE_URL=http://nlp-service:8001
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379
      - DATABASE_URL=postgresql://${POSTGRES_USER:-sentinel}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-sentinelbert}
    depends_on:
      nlp-service:
        condition: service_healthy
    ports:
      - "12002:8501"
    networks:
      - sentinelbert-net
    restart: unless-stopped

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - REACT_APP_API_URL=https://work-1-nzmvrrcbclaeqnzx.prod-runtime.all-hands.dev
    container_name: sentinelbert-frontend
    environment:
      - REACT_APP_API_URL=https://work-1-nzmvrrcbclaeqnzx.prod-runtime.all-hands.dev
    depends_on:
      - nlp-service
    ports:
      - "12001:80"
    networks:
      - sentinelbert-net
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  sentinelbert-net:
    driver: bridge
