# =============================================================================
# SentinelBERT Environment Configuration Template
# =============================================================================
# 
# This file contains all environment variables needed to run SentinelBERT.
# Copy this file to .env and fill in your actual values.
# 
# SECURITY WARNING: Never commit the actual .env file to version control!
# The .env file contains sensitive information like API keys and passwords.
#
# To use this file:
# 1. Copy: cp .env.example .env
# 2. Edit: nano .env (or your preferred editor)
# 3. Fill in all the values marked with "CHANGE_ME" or "your_*_here"
# 4. Generate secure passwords using: openssl rand -base64 32
#
# =============================================================================

# -----------------------------------------------------------------------------
# Environment Settings
# -----------------------------------------------------------------------------
# Environment type: development, staging, production
ENVIRONMENT=development

# Application version
APP_VERSION=1.0.0

# Debug mode (true/false) - NEVER enable in production
DEBUG_MODE=false

# -----------------------------------------------------------------------------
# Database Configuration
# -----------------------------------------------------------------------------
# PostgreSQL Database Settings
POSTGRES_DB=sentinelbert
POSTGRES_USER=sentinel
POSTGRES_PASSWORD=CHANGE_ME_SECURE_PASSWORD_HERE
POSTGRES_HOST=postgres
POSTGRES_PORT=5432

# Database connection pool settings
DB_MAX_CONNECTIONS=20
DB_MIN_CONNECTIONS=5
DB_CONNECTION_TIMEOUT=30

# Database SSL settings (disable for local development)
DB_SSL_MODE=prefer

# -----------------------------------------------------------------------------
# Redis Cache Configuration
# -----------------------------------------------------------------------------
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=CHANGE_ME_REDIS_PASSWORD_HERE
REDIS_DB=0

# Redis connection settings
REDIS_MAX_CONNECTIONS=10
REDIS_CONNECTION_TIMEOUT=5

# Cache TTL settings (in seconds)
CACHE_DEFAULT_TTL=3600
CACHE_USER_PROFILE_TTL=86400
CACHE_POST_TTL=1800

# -----------------------------------------------------------------------------
# ElasticSearch Configuration
# -----------------------------------------------------------------------------
ELASTICSEARCH_HOST=elasticsearch
ELASTICSEARCH_PORT=9200
ELASTICSEARCH_USERNAME=elastic
ELASTICSEARCH_PASSWORD=CHANGE_ME_ELASTIC_PASSWORD_HERE

# ElasticSearch index settings
ES_INDEX_PREFIX=sentinelbert
ES_POSTS_INDEX=social_posts
ES_USERS_INDEX=user_profiles

# Bulk indexing settings
ES_BULK_SIZE=1000
ES_BULK_TIMEOUT=30

# -----------------------------------------------------------------------------
# Social Media API Keys (Free Tier)
# -----------------------------------------------------------------------------

# Twitter/X.com API (Essential Access - Free)
# Get from: https://developer.twitter.com/
# Free tier: 500K tweets/month, 300 requests per 15 minutes
TWITTER_BEARER_TOKEN=your_twitter_bearer_token_here
TWITTER_API_VERSION=2
TWITTER_RATE_LIMIT=300

# Reddit API (Free)
# Get from: https://www.reddit.com/prefs/apps
# Free tier: 100 requests/minute, 1000 requests/hour
REDDIT_CLIENT_ID=your_reddit_client_id_here
REDDIT_CLIENT_SECRET=your_reddit_client_secret_here
REDDIT_USER_AGENT=SentinelBERT/1.0
REDDIT_RATE_LIMIT=60

# YouTube Data API v3 (Free)
# Get from: https://console.cloud.google.com/
# Free tier: 10,000 units/day
YOUTUBE_API_KEY=your_youtube_api_key_here
YOUTUBE_DAILY_QUOTA=10000

# Instagram Basic Display API (Free)
# Get from: https://developers.facebook.com/
# Free tier: 200 requests/hour per user
INSTAGRAM_ACCESS_TOKEN=your_instagram_access_token_here
INSTAGRAM_RATE_LIMIT=200

# Telegram Bot API (Free)
# Get from: @BotFather on Telegram
# Free tier: No explicit limits
TELEGRAM_BOT_TOKEN=your_telegram_bot_token_here

# Facebook Graph API (Optional - for public pages)
# Get from: https://developers.facebook.com/
FACEBOOK_ACCESS_TOKEN=your_facebook_access_token_here

# TikTok API (Optional - requires approval)
# Get from: https://developers.tiktok.com/
TIKTOK_CLIENT_KEY=your_tiktok_client_key_here
TIKTOK_CLIENT_SECRET=your_tiktok_client_secret_here

# -----------------------------------------------------------------------------
# Security Configuration
# -----------------------------------------------------------------------------
# JWT (JSON Web Token) settings
# Generate with: openssl rand -base64 32
JWT_SECRET=CHANGE_ME_JWT_SECRET_MINIMUM_32_CHARACTERS_LONG
JWT_EXPIRATION=900          # 15 minutes
JWT_REFRESH_EXPIRATION=604800  # 7 days
JWT_ALGORITHM=HS256

# Encryption settings
# Generate with: openssl rand -base64 32
ENCRYPTION_KEY=CHANGE_ME_ENCRYPTION_KEY_HERE
HASH_SALT=CHANGE_ME_HASH_SALT_HERE
HASH_ALGORITHM=SHA256

# Password hashing settings
BCRYPT_ROUNDS=12

# API security
API_KEY_ROTATION_ENABLED=false
API_KEY_ROTATION_INTERVAL=2592000  # 30 days

# CORS settings
CORS_ENABLED=true
CORS_ORIGINS=http://localhost:3000,http://localhost:8080
CORS_METHODS=GET,POST,PUT,DELETE,OPTIONS
CORS_HEADERS=Content-Type,Authorization,X-Requested-With

# -----------------------------------------------------------------------------
# Application Service Configuration
# -----------------------------------------------------------------------------

# Backend Service (Spring Boot)
BACKEND_HOST=0.0.0.0
BACKEND_PORT=8080
BACKEND_WORKERS=4
BACKEND_MAX_THREADS=200

# NLP Service (Python/FastAPI)
NLP_HOST=0.0.0.0
NLP_PORT=8000
NLP_WORKERS=2
NLP_MAX_REQUESTS=1000

# Ingestion Service (Rust)
INGESTION_HOST=0.0.0.0
INGESTION_PORT=8081
INGESTION_WORKERS=4

# Frontend Service (React)
REACT_APP_API_URL=http://localhost:8080
REACT_APP_WEBSOCKET_URL=ws://localhost:8080
REACT_APP_VERSION=1.0.0
REACT_APP_ENVIRONMENT=development

# -----------------------------------------------------------------------------
# Machine Learning Configuration
# -----------------------------------------------------------------------------
# Model settings
MODEL_PATH=/app/models
MODEL_CACHE_SIZE=1000
MODEL_BATCH_SIZE=32
MODEL_MAX_LENGTH=512

# GPU settings (set to -1 to disable GPU)
CUDA_VISIBLE_DEVICES=0
CUDA_MEMORY_FRACTION=0.8

# BERT model settings
BERT_MODEL_NAME=bert-base-uncased
BERT_FINE_TUNED_PATH=/app/models/sentinelbert-v1.0
BERT_CACHE_DIR=/app/models/cache

# Sentiment analysis settings
SENTIMENT_THRESHOLD_POSITIVE=0.6
SENTIMENT_THRESHOLD_NEGATIVE=-0.6
SENTIMENT_CONFIDENCE_THRESHOLD=0.8

# Behavioral analysis settings
BEHAVIORAL_ANALYSIS_ENABLED=true
INFLUENCE_SCORING_ENABLED=true
TREND_DETECTION_ENABLED=true

# -----------------------------------------------------------------------------
# Rate Limiting Configuration
# -----------------------------------------------------------------------------
# Global rate limiting
RATE_LIMIT_ENABLED=true
RATE_LIMIT_PER_MINUTE=100
RATE_LIMIT_PER_HOUR=1000
RATE_LIMIT_BURST_SIZE=50

# User-specific rate limiting
USER_RATE_LIMIT_PER_MINUTE=200
USER_RATE_LIMIT_PER_HOUR=2000

# API-specific rate limiting
API_RATE_LIMIT_SEARCH=60      # searches per minute
API_RATE_LIMIT_ANALYSIS=30    # analysis requests per minute
API_RATE_LIMIT_EXPORT=10      # export requests per minute

# -----------------------------------------------------------------------------
# Monitoring and Observability
# -----------------------------------------------------------------------------
# Prometheus metrics
PROMETHEUS_ENABLED=true
PROMETHEUS_PORT=9090
PROMETHEUS_METRICS_PATH=/metrics

# Grafana dashboard
GRAFANA_ENABLED=true
GRAFANA_PORT=3001
GRAFANA_USER=admin
GRAFANA_PASSWORD=CHANGE_ME_GRAFANA_PASSWORD_HERE

# Jaeger distributed tracing
JAEGER_ENABLED=true
JAEGER_PORT=16686
JAEGER_AGENT_HOST=jaeger
JAEGER_AGENT_PORT=6831
JAEGER_SAMPLE_RATE=0.1

# Logging configuration
LOG_LEVEL=info
LOG_FORMAT=json
LOG_FILE=/var/log/sentinelbert/app.log
LOG_MAX_SIZE=100MB
LOG_MAX_FILES=10
LOG_ROTATION_ENABLED=true

# Health check settings
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_INTERVAL=30
HEALTH_CHECK_TIMEOUT=10

# -----------------------------------------------------------------------------
# Data Processing Configuration
# -----------------------------------------------------------------------------
# Batch processing settings
BATCH_SIZE=1000
BATCH_TIMEOUT=30
MAX_CONCURRENT_BATCHES=5

# Queue settings
QUEUE_BROKER_URL=redis://redis:6379/1
QUEUE_RESULT_BACKEND=redis://redis:6379/2
QUEUE_MAX_WORKERS=4
QUEUE_PREFETCH_COUNT=10

# Data validation settings
STRICT_VALIDATION=true
VALIDATE_TIMESTAMPS=true
VALIDATE_USER_IDS=true
CONTENT_MAX_LENGTH=10000

# Content processing
EXTRACT_HASHTAGS=true
EXTRACT_MENTIONS=true
EXTRACT_URLS=true
DETECT_LANGUAGE=true
NORMALIZE_TEXT=true

# Duplicate detection
DEDUPLICATION_ENABLED=true
DEDUP_WINDOW_HOURS=24
DEDUP_SIMILARITY_THRESHOLD=0.95

# -----------------------------------------------------------------------------
# Data Retention and Backup
# -----------------------------------------------------------------------------
# Data retention settings
DATA_RETENTION_ENABLED=true
DATA_RETENTION_DAYS=730      # 2 years
LOG_RETENTION_DAYS=90        # 3 months
CACHE_RETENTION_HOURS=24     # 1 day

# Cleanup settings
CLEANUP_ENABLED=true
CLEANUP_INTERVAL_HOURS=24
CLEANUP_BATCH_SIZE=10000

# Backup settings
BACKUP_ENABLED=true
BACKUP_INTERVAL_HOURS=6
BACKUP_RETENTION_DAYS=30
BACKUP_LOCATION=/var/backups/sentinelbert
BACKUP_COMPRESSION=true

# -----------------------------------------------------------------------------
# Privacy and Compliance
# -----------------------------------------------------------------------------
# PII (Personally Identifiable Information) handling
ANONYMIZE_USER_IDS=true
ANONYMIZE_IP_ADDRESSES=true
REDACT_EMAIL_ADDRESSES=true
REDACT_PHONE_NUMBERS=true

# Content filtering
PROFANITY_FILTER_ENABLED=true
SPAM_DETECTION_ENABLED=true
MALWARE_URL_DETECTION=true

# Audit logging
AUDIT_LOGGING_ENABLED=true
AUDIT_LOG_ALL_REQUESTS=true
AUDIT_LOG_SENSITIVE_DATA=false

# GDPR compliance
GDPR_COMPLIANCE_ENABLED=true
DATA_SUBJECT_RIGHTS_ENABLED=true
RIGHT_TO_BE_FORGOTTEN_ENABLED=true

# -----------------------------------------------------------------------------
# Email Configuration (for alerts and notifications)
# -----------------------------------------------------------------------------
# SMTP settings
SMTP_ENABLED=false
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USE_TLS=true
SMTP_USERNAME=your_email@gmail.com
SMTP_PASSWORD=your_app_password_here
SMTP_FROM_ADDRESS=noreply@sentinelbert.com
SMTP_FROM_NAME=SentinelBERT System

# Email templates
EMAIL_TEMPLATE_PATH=/app/templates/email
EMAIL_LOGO_URL=https://your-domain.com/logo.png

# -----------------------------------------------------------------------------
# Webhook Configuration
# -----------------------------------------------------------------------------
# Webhook settings for real-time notifications
WEBHOOK_ENABLED=false
WEBHOOK_URL=https://your-webhook-endpoint.com/sentinelbert
WEBHOOK_SECRET=CHANGE_ME_WEBHOOK_SECRET_HERE
WEBHOOK_TIMEOUT=30
WEBHOOK_RETRY_COUNT=3

# -----------------------------------------------------------------------------
# Feature Flags
# -----------------------------------------------------------------------------
# Enable/disable specific features
FEATURE_REAL_TIME_PROCESSING=true
FEATURE_BATCH_PROCESSING=true
FEATURE_SENTIMENT_ANALYSIS=true
FEATURE_BEHAVIORAL_ANALYSIS=true
FEATURE_INFLUENCE_SCORING=true
FEATURE_GEOGRAPHIC_ANALYSIS=true
FEATURE_TREND_DETECTION=true
FEATURE_ALERT_GENERATION=true

# Experimental features (use with caution)
FEATURE_EXPERIMENTAL_ML_MODELS=false
FEATURE_EXPERIMENTAL_APIS=false
FEATURE_BETA_FEATURES=false

# -----------------------------------------------------------------------------
# Development and Testing
# -----------------------------------------------------------------------------
# Development mode settings
DEV_MODE=true
DEV_MOCK_APIS=false
DEV_TEST_DATA_ENABLED=false
DEV_SIMULATE_RATE_LIMITS=false
DEV_SIMULATE_API_ERRORS=false

# Testing settings
TEST_DATABASE=sentinelbert_test
TEST_REDIS_DB=15
TEST_CLEANUP_DATA=true
TEST_PARALLEL_EXECUTION=false

# -----------------------------------------------------------------------------
# Performance Tuning
# -----------------------------------------------------------------------------
# Connection pool settings
DB_POOL_SIZE=20
REDIS_POOL_SIZE=10
HTTP_POOL_SIZE=100

# Timeout settings
HTTP_TIMEOUT=30
DB_QUERY_TIMEOUT=30
CACHE_TIMEOUT=5

# Memory settings
MAX_MEMORY_USAGE=0.8         # 80% of available memory
GC_THRESHOLD=0.7             # Trigger garbage collection at 70%

# CPU settings
MAX_CPU_USAGE=0.8            # 80% of available CPU
THREAD_POOL_SIZE=0           # 0 = auto-detect based on CPU cores

# -----------------------------------------------------------------------------
# Networking Configuration
# -----------------------------------------------------------------------------
# Network settings
NETWORK_TIMEOUT=30
NETWORK_RETRIES=3
NETWORK_BACKOFF_FACTOR=2

# Proxy settings (if needed)
HTTP_PROXY=
HTTPS_PROXY=
NO_PROXY=localhost,127.0.0.1

# DNS settings
DNS_TIMEOUT=5
DNS_RETRIES=3

# -----------------------------------------------------------------------------
# Container and Orchestration Settings
# -----------------------------------------------------------------------------
# Docker settings
DOCKER_REGISTRY=
DOCKER_TAG=latest
DOCKER_BUILD_ARGS=

# Kubernetes settings
K8S_NAMESPACE=sentinelbert
K8S_SERVICE_ACCOUNT=sentinelbert-sa
K8S_CONFIG_MAP=sentinelbert-config
K8S_SECRET=sentinelbert-secrets

# Health check settings for containers
CONTAINER_HEALTH_CHECK_INTERVAL=30
CONTAINER_HEALTH_CHECK_TIMEOUT=10
CONTAINER_HEALTH_CHECK_RETRIES=3

# -----------------------------------------------------------------------------
# Load Balancing and Scaling
# -----------------------------------------------------------------------------
# Auto-scaling settings
AUTOSCALING_ENABLED=false
AUTOSCALING_MIN_REPLICAS=1
AUTOSCALING_MAX_REPLICAS=10
AUTOSCALING_TARGET_CPU=70
AUTOSCALING_TARGET_MEMORY=80

# Load balancing
LOAD_BALANCER_ALGORITHM=round_robin
LOAD_BALANCER_HEALTH_CHECK=true
LOAD_BALANCER_TIMEOUT=30

# -----------------------------------------------------------------------------
# External Service Integration
# -----------------------------------------------------------------------------
# Third-party service settings
EXTERNAL_API_TIMEOUT=30
EXTERNAL_API_RETRIES=3
EXTERNAL_API_RATE_LIMIT=100

# Geocoding service (for location data)
GEOCODING_ENABLED=true
GEOCODING_PROVIDER=nominatim
GEOCODING_API_KEY=your_geocoding_api_key_here
GEOCODING_CACHE_TTL=86400

# Language detection service
LANGUAGE_DETECTION_ENABLED=true
LANGUAGE_DETECTION_PROVIDER=fasttext
LANGUAGE_CONFIDENCE_THRESHOLD=0.8

# -----------------------------------------------------------------------------
# Compliance and Legal
# -----------------------------------------------------------------------------
# Legal compliance settings
LEGAL_COMPLIANCE_ENABLED=true
TERMS_OF_SERVICE_URL=https://your-domain.com/terms
PRIVACY_POLICY_URL=https://your-domain.com/privacy
DATA_PROCESSING_AGREEMENT_URL=https://your-domain.com/dpa

# Jurisdiction settings
LEGAL_JURISDICTION=US
DATA_RESIDENCY_REQUIREMENTS=true
CROSS_BORDER_DATA_TRANSFER=false

# =============================================================================
# GOOGLE CLOUD PLATFORM CONFIGURATION
# =============================================================================
# Comprehensive GCP configuration for production deployment
# Optimized for your specific GCP setup with $5,000 credit budget

# -----------------------------------------------------------------------------
# GCP Project & Authentication
# -----------------------------------------------------------------------------
# Primary GCP project configuration
GCP_PROJECT_ID=your-sentinelbert-project-id
GCP_PROJECT_NUMBER=123456789012
GCP_BILLING_ACCOUNT_ID=ABCDEF-123456-GHIJKL

# Service account configuration for application authentication
GOOGLE_APPLICATION_CREDENTIALS=/path/to/service-account-key.json
GCP_SERVICE_ACCOUNT_EMAIL=sentinelbert-app@your-project.iam.gserviceaccount.com

# Regional configuration for optimal performance and cost
GCP_PRIMARY_REGION=us-east1
GCP_SECONDARY_REGION=europe-west1
GCP_STORAGE_REGION=us-central1
GCP_ANALYTICS_REGION=US

# -----------------------------------------------------------------------------
# VERTEX AI CONFIGURATION
# -----------------------------------------------------------------------------
# Vertex AI Prediction Service Configuration
# TPU V5e setup for high-performance ML workloads
VERTEX_AI_REGION=us-east1
VERTEX_AI_ZONE=us-east1-a
VERTEX_AI_PROJECT_ID=${GCP_PROJECT_ID}

# TPU V5e Configuration (4 cores, 2 hours/month)
VERTEX_AI_TPU_TYPE=ct5lp-hightpu-4t
VERTEX_AI_TPU_CORES=4
VERTEX_AI_ACCELERATOR_TYPE=TPU_V5E
VERTEX_AI_RUNTIME_HOURS_PER_MONTH=2

# Model serving configuration
VERTEX_AI_MODEL_DISPLAY_NAME=sentinelbert-bert-model
VERTEX_AI_ENDPOINT_DISPLAY_NAME=sentinelbert-prediction-endpoint
VERTEX_AI_DEPLOYED_MODEL_DISPLAY_NAME=sentinelbert-bert-v1

# Pipeline configuration (120 runs per month)
VERTEX_AI_PIPELINE_ROOT=gs://your-vertex-pipeline-bucket/pipeline-runs
VERTEX_AI_PIPELINE_RUNS_PER_MONTH=120
VERTEX_AI_PIPELINE_SCHEDULE=0 */6 * * *
VERTEX_AI_STAGING_BUCKET=gs://your-vertex-staging-bucket

# Model registry and versioning
VERTEX_AI_MODEL_REGISTRY_LOCATION=${VERTEX_AI_REGION}
VERTEX_AI_MODEL_ARTIFACT_URI=gs://your-model-bucket/bert-model/
VERTEX_AI_SERVING_CONTAINER_IMAGE_URI=gcr.io/cloud-aiplatform/prediction/pytorch-gpu.1-13:latest

# -----------------------------------------------------------------------------
# CODE MODELS (GENERATIVE AI) CONFIGURATION
# -----------------------------------------------------------------------------
# Codey for Code Generation (1000 requests/day)
CODEY_PROJECT_ID=${GCP_PROJECT_ID}
CODEY_LOCATION=us-central1
CODEY_GENERATION_MODEL=code-bison@001
CODEY_GENERATION_REQUESTS_PER_DAY=1000
CODEY_GENERATION_PEAK_REQUESTS_PER_MINUTE=10
CODEY_GENERATION_AVG_INPUT_CHARS=500
CODEY_GENERATION_AVG_OUTPUT_CHARS=8000
CODEY_GENERATION_BATCH_DISCOUNTS=true

# Codey for Code Chat (1000 requests/day)
CODEY_CHAT_MODEL=codechat-bison@001
CODEY_CHAT_REQUESTS_PER_DAY=1000
CODEY_CHAT_PEAK_REQUESTS_PER_MINUTE=100
CODEY_CHAT_AVG_INPUT_CHARS=100
CODEY_CHAT_AVG_OUTPUT_CHARS=2000

# Codey for Code Completion (1000 requests/day)
CODEY_COMPLETION_MODEL=code-gecko@001
CODEY_COMPLETION_REQUESTS_PER_DAY=1000
CODEY_COMPLETION_PEAK_REQUESTS_PER_MINUTE=100
CODEY_COMPLETION_AVG_INPUT_CHARS=1000
CODEY_COMPLETION_AVG_OUTPUT_CHARS=600

# API configuration
CODEY_API_ENDPOINT=us-central1-aiplatform.googleapis.com
CODEY_API_VERSION=v1
CODEY_TEMPERATURE=0.2
CODEY_MAX_OUTPUT_TOKENS=2048
CODEY_TOP_P=0.8
CODEY_TOP_K=40

# -----------------------------------------------------------------------------
# CLOUD RUN CONFIGURATION
# -----------------------------------------------------------------------------
# Cloud Run service configuration (europe-west1)
CLOUD_RUN_REGION=europe-west1
CLOUD_RUN_SERVICE_NAME=sentinelbert-api
CLOUD_RUN_CPU=2
CLOUD_RUN_MEMORY=1Gi
CLOUD_RUN_TIMEOUT=300
CLOUD_RUN_CONCURRENCY=20

# Scaling configuration (10 million requests/month)
CLOUD_RUN_MIN_INSTANCES=0
CLOUD_RUN_MAX_INSTANCES=100
CLOUD_RUN_REQUESTS_PER_MONTH=10000000
CLOUD_RUN_EXECUTION_TIME_PER_REQUEST=400

# Traffic and billing configuration
CLOUD_RUN_TRAFFIC_SHAPE=daily_peak_trough
CLOUD_RUN_BILLING_MODEL=request_based
CLOUD_RUN_COMMITTED_USE_DISCOUNT=true
CLOUD_RUN_CUD_TERM=1_year
CLOUD_RUN_CUD_DISCOUNT=17

# Container configuration
CLOUD_RUN_CONTAINER_IMAGE=gcr.io/${GCP_PROJECT_ID}/sentinelbert-api:latest
CLOUD_RUN_CONTAINER_PORT=8080
CLOUD_RUN_ALLOW_UNAUTHENTICATED=false

# Environment-specific URLs
CLOUD_RUN_SERVICE_URL=https://sentinelbert-api-hash-ew.a.run.app

# -----------------------------------------------------------------------------
# BIGQUERY CONFIGURATION
# -----------------------------------------------------------------------------
# BigQuery Standard Edition (100 slots)
BIGQUERY_PROJECT_ID=${GCP_PROJECT_ID}
BIGQUERY_LOCATION=US
BIGQUERY_EDITION=STANDARD
BIGQUERY_MAX_SLOTS=100
BIGQUERY_AVERAGE_SLOT_UTILIZATION=5

# Dataset configuration
BIGQUERY_DATASET_ID=sentinelbert_analytics
BIGQUERY_POSTS_TABLE=social_posts
BIGQUERY_USERS_TABLE=user_profiles
BIGQUERY_ANALYTICS_TABLE=sentiment_analytics
BIGQUERY_BEHAVIORAL_TABLE=behavioral_patterns

# Storage configuration
BIGQUERY_ACTIVE_LOGICAL_STORAGE_GIB=6
BIGQUERY_LONG_TERM_LOGICAL_STORAGE_GIB=10
BIGQUERY_STORAGE_WRITE_API_GIB=50

# Query and job configuration
BIGQUERY_JOB_TIMEOUT_MS=600000
BIGQUERY_QUERY_TIMEOUT_MS=300000
BIGQUERY_MAX_RESULTS=10000
BIGQUERY_USE_LEGACY_SQL=false

# Data lifecycle management
BIGQUERY_TABLE_EXPIRATION_DAYS=730
BIGQUERY_PARTITION_EXPIRATION_DAYS=90
BIGQUERY_CLUSTERING_FIELDS=platform,sentiment_label,created_date

# -----------------------------------------------------------------------------
# PUB/SUB CONFIGURATION
# -----------------------------------------------------------------------------
# Pub/Sub messaging configuration (15 GiB daily data)
PUBSUB_PROJECT_ID=${GCP_PROJECT_ID}
PUBSUB_TOPIC_ID=social-media-ingestion
PUBSUB_SUBSCRIPTION_ID=sentiment-analysis-subscription
PUBSUB_DEAD_LETTER_TOPIC=social-media-dead-letter

# Data volume configuration
PUBSUB_DAILY_DATA_GIB=15
PUBSUB_MESSAGE_DELIVERY_TYPE=bigquery
PUBSUB_TOPIC_RETENTION_DAYS=1
PUBSUB_AVERAGE_RETENTION_WINDOW_DAYS=1
PUBSUB_RETAINED_ACK_MESSAGES_SUBSCRIPTIONS=1

# Message configuration
PUBSUB_MAX_MESSAGE_SIZE=10485760
PUBSUB_MESSAGE_ORDERING=false
PUBSUB_ENABLE_MESSAGE_FILTERING=true
PUBSUB_ACK_DEADLINE_SECONDS=600
PUBSUB_MESSAGE_RETENTION_DURATION=604800

# Batch configuration for BigQuery delivery
PUBSUB_BIGQUERY_BATCH_SIZE=1000
PUBSUB_BIGQUERY_BATCH_TIMEOUT=60
PUBSUB_BIGQUERY_MAX_LATENCY=100

# -----------------------------------------------------------------------------
# CLOUD STORAGE CONFIGURATION
# -----------------------------------------------------------------------------
# Cloud Storage data lake (200 GiB Standard Storage)
STORAGE_PROJECT_ID=${GCP_PROJECT_ID}
STORAGE_BUCKET_NAME=sentinelbert-data-lake
STORAGE_REGION=us-central1
STORAGE_LOCATION_TYPE=region
STORAGE_CLASS=STANDARD

# Bucket configuration
STORAGE_TOTAL_SIZE_GIB=200
STORAGE_VERSIONING_ENABLED=true
STORAGE_UNIFORM_BUCKET_LEVEL_ACCESS=true
STORAGE_PUBLIC_ACCESS_PREVENTION=enforced

# Data transfer configuration
STORAGE_DATA_TRANSFER_WITHIN_GCP_GIB=500
STORAGE_SOURCE_REGION=north_america
STORAGE_DESTINATION_REGION=north_america

# Lifecycle management
STORAGE_LIFECYCLE_NEARLINE_DAYS=30
STORAGE_LIFECYCLE_COLDLINE_DAYS=90
STORAGE_LIFECYCLE_ARCHIVE_DAYS=365
STORAGE_LIFECYCLE_DELETE_DAYS=2555

# Folder structure
STORAGE_RAW_DATA_PREFIX=raw-data/
STORAGE_PROCESSED_DATA_PREFIX=processed-data/
STORAGE_MODELS_PREFIX=models/
STORAGE_BACKUPS_PREFIX=backups/
STORAGE_LOGS_PREFIX=logs/

# -----------------------------------------------------------------------------
# CLOUD FUNCTIONS CONFIGURATION
# -----------------------------------------------------------------------------
# Cloud Functions for data ingestion
CLOUD_FUNCTIONS_REGION=${GCP_PRIMARY_REGION}
CLOUD_FUNCTIONS_RUNTIME=python311
CLOUD_FUNCTIONS_MEMORY=512MB
CLOUD_FUNCTIONS_TIMEOUT=540
CLOUD_FUNCTIONS_MAX_INSTANCES=100

# Function names
CLOUD_FUNCTION_TWITTER_INGESTION=twitter-ingestion-function
CLOUD_FUNCTION_REDDIT_INGESTION=reddit-ingestion-function
CLOUD_FUNCTION_INSTAGRAM_INGESTION=instagram-ingestion-function
CLOUD_FUNCTION_YOUTUBE_INGESTION=youtube-ingestion-function

# Trigger configuration
CLOUD_FUNCTIONS_TRIGGER_TYPE=http
CLOUD_FUNCTIONS_SCHEDULE=*/15 * * * *
CLOUD_FUNCTIONS_RETRY_POLICY=exponential_backoff

# -----------------------------------------------------------------------------
# CLOUD MONITORING & LOGGING
# -----------------------------------------------------------------------------
# Cloud Monitoring configuration
MONITORING_PROJECT_ID=${GCP_PROJECT_ID}
MONITORING_NOTIFICATION_CHANNELS=email:admin@yourcompany.com,slack:sentinelbert-alerts
MONITORING_UPTIME_CHECK_REGIONS=us-east1,europe-west1,asia-southeast1

# Alert policies
MONITORING_COST_ALERT_THRESHOLD=100
MONITORING_ERROR_RATE_THRESHOLD=0.01
MONITORING_LATENCY_THRESHOLD=2000
MONITORING_TPU_UTILIZATION_THRESHOLD=70

# Logging configuration
LOGGING_PROJECT_ID=${GCP_PROJECT_ID}
LOGGING_LOG_LEVEL=INFO
LOGGING_RETENTION_DAYS=30
LOGGING_EXPORT_DESTINATION=bigquery
LOGGING_EXPORT_DATASET=${BIGQUERY_DATASET_ID}
LOGGING_EXPORT_TABLE=application_logs

# -----------------------------------------------------------------------------
# CLOUD SECURITY CONFIGURATION
# -----------------------------------------------------------------------------
# Identity and Access Management (IAM)
IAM_SERVICE_ACCOUNT_VERTEX_AI=vertex-ai-service@${GCP_PROJECT_ID}.iam.gserviceaccount.com
IAM_SERVICE_ACCOUNT_CLOUD_RUN=cloud-run-service@${GCP_PROJECT_ID}.iam.gserviceaccount.com
IAM_SERVICE_ACCOUNT_BIGQUERY=bigquery-service@${GCP_PROJECT_ID}.iam.gserviceaccount.com
IAM_SERVICE_ACCOUNT_STORAGE=storage-service@${GCP_PROJECT_ID}.iam.gserviceaccount.com

# Cloud KMS for encryption
KMS_PROJECT_ID=${GCP_PROJECT_ID}
KMS_LOCATION=${GCP_PRIMARY_REGION}
KMS_KEY_RING=sentinelbert-keyring
KMS_CRYPTO_KEY=sentinelbert-key
KMS_KEY_ROTATION_PERIOD=7776000

# VPC and networking
VPC_NETWORK_NAME=sentinelbert-vpc
VPC_SUBNET_NAME=sentinelbert-subnet
VPC_SUBNET_RANGE=10.0.0.0/24
VPC_FIREWALL_ALLOW_HTTP=sentinelbert-allow-http
VPC_FIREWALL_ALLOW_HTTPS=sentinelbert-allow-https

# Cloud Armor for DDoS protection
CLOUD_ARMOR_POLICY_NAME=sentinelbert-security-policy
CLOUD_ARMOR_RATE_LIMIT_THRESHOLD=100
CLOUD_ARMOR_BAN_DURATION=600

# -----------------------------------------------------------------------------
# COST MANAGEMENT CONFIGURATION
# -----------------------------------------------------------------------------
# Budget and billing alerts
BILLING_BUDGET_NAME=sentinelbert-budget
BILLING_BUDGET_AMOUNT=5000
BILLING_ALERT_THRESHOLDS=0.5,0.75,0.9
BILLING_NOTIFICATION_CHANNELS=${MONITORING_NOTIFICATION_CHANNELS}

# Cost allocation labels
COST_LABEL_ENVIRONMENT=production
COST_LABEL_TEAM=ml-engineering
COST_LABEL_PROJECT=sentinelbert
COST_LABEL_COMPONENT=sentiment-analysis

# Resource quotas
QUOTA_VERTEX_AI_TPU_CORES=4
QUOTA_CLOUD_RUN_SERVICES=10
QUOTA_BIGQUERY_SLOTS=100
QUOTA_STORAGE_BUCKETS=20
QUOTA_PUBSUB_TOPICS=50

# -----------------------------------------------------------------------------
# PERFORMANCE OPTIMIZATION
# -----------------------------------------------------------------------------
# Caching configuration
CACHE_VERTEX_AI_PREDICTIONS=true
CACHE_BIGQUERY_RESULTS=true
CACHE_STORAGE_METADATA=true
CACHE_TTL_PREDICTIONS=3600
CACHE_TTL_ANALYTICS=1800

# Connection pooling
CONNECTION_POOL_BIGQUERY_SIZE=10
CONNECTION_POOL_STORAGE_SIZE=20
CONNECTION_POOL_PUBSUB_SIZE=5

# Batch processing optimization
BATCH_SIZE_VERTEX_AI=32
BATCH_SIZE_BIGQUERY_INSERT=1000
BATCH_SIZE_PUBSUB_PUBLISH=100
BATCH_TIMEOUT_SECONDS=30

# -----------------------------------------------------------------------------
# DISASTER RECOVERY & BACKUP
# -----------------------------------------------------------------------------
# Backup configuration
BACKUP_ENABLED=true
BACKUP_SCHEDULE=0 2 * * *
BACKUP_RETENTION_DAYS=30
BACKUP_STORAGE_BUCKET=sentinelbert-backups
BACKUP_ENCRYPTION_KEY=${KMS_CRYPTO_KEY}

# Multi-region configuration
MULTI_REGION_ENABLED=true
FAILOVER_REGION=europe-west1
REPLICATION_ENABLED=true
REPLICATION_SYNC_MODE=async

# -----------------------------------------------------------------------------
# DEVELOPMENT & TESTING
# -----------------------------------------------------------------------------
# Environment-specific overrides
DEV_GCP_PROJECT_ID=sentinelbert-dev
STAGING_GCP_PROJECT_ID=sentinelbert-staging
PROD_GCP_PROJECT_ID=sentinelbert-prod

# Testing configuration
TEST_VERTEX_AI_MODEL=test-bert-model
TEST_BIGQUERY_DATASET=test_analytics
TEST_STORAGE_BUCKET=sentinelbert-test-data
TEST_PUBSUB_TOPIC=test-social-media

# Feature flags for GCP services
FEATURE_VERTEX_AI_ENABLED=true
FEATURE_CODEY_ENABLED=true
FEATURE_BIGQUERY_STREAMING=true
FEATURE_CLOUD_RUN_AUTOSCALING=true
FEATURE_ADVANCED_MONITORING=true

# -----------------------------------------------------------------------------
# CUSTOM CONFIGURATION
# -----------------------------------------------------------------------------
# Add any custom environment variables specific to your GCP deployment here
# CUSTOM_GCP_SETTING_1=value1
# CUSTOM_GCP_SETTING_2=value2

# -----------------------------------------------------------------------------
# End of Configuration
# -----------------------------------------------------------------------------
# 
# Remember to:
# 1. Replace all "CHANGE_ME" and "your_*_here" values
# 2. Generate secure passwords and keys
# 3. Never commit the actual .env file to version control
# 4. Regularly rotate passwords and API keys
# 5. Use different values for different environments (dev/staging/prod)
#