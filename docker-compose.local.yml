version: '3.8'

services:
  # Redis (keeping for caching)
  redis:
    image: redis:7.2-alpine
    container_name: sentinelbert-redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - sentinelbert-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Application Services (configured for local PostgreSQL)
  nlp-service:
    build:
      context: ./services/nlp
      dockerfile: Dockerfile
    container_name: sentinelbert-nlp
    environment:
      - MODEL_PATH=/app/models
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379
      - DATABASE_URL=${DATABASE_URL}
      - CUDA_VISIBLE_DEVICES=0
    volumes:
      - ./models:/app/models:ro
      - nlp_cache:/app/cache
    depends_on:
      redis:
        condition: service_healthy
    ports:
      - "8001:8000"
    networks:
      - sentinelbert-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 8G
        reservations:
          memory: 4G

  backend-service:
    build:
      context: ./services/backend
      dockerfile: Dockerfile
    container_name: sentinelbert-backend
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
      - SPRING_DATASOURCE_USERNAME=${DB_USER}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PASSWORD=${REDIS_PASSWORD}
      - NLP_SERVICE_URL=http://nlp-service:8000
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      redis:
        condition: service_healthy
      nlp-service:
        condition: service_started
    ports:
      - "8080:8080"
    networks:
      - sentinelbert-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: sentinelbert-frontend
    environment:
      - REACT_APP_API_URL=http://localhost:8080
      - REACT_APP_WEBSOCKET_URL=ws://localhost:8080
      - REACT_APP_VERSION=1.0.0
    depends_on:
      - backend-service
    ports:
      - "3000:80"
    networks:
      - sentinelbert-network
    restart: unless-stopped

volumes:
  redis_data:
    driver: local
  nlp_cache:
    driver: local

networks:
  sentinelbert-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16